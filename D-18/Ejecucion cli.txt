C:\temp\borrar>docker run -d -p 27017:27017 --name mongodb mongo:latest
8b24ddd4c7740e3760564c357b04ab607dba8e1b7e00ae9f1f27ee5407637376

C:\temp\borrar>docker exec -it mongodb bash
root@8b24ddd4c774:/# mongo
MongoDB shell version v4.4.4
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("75a253d6-096b-4954-bf36-8b0a046d7c48") }
MongoDB server version: 4.4.4
Welcome to the MongoDB shell.
For interactive help, type "help".
For more comprehensive documentation, see
        https://docs.mongodb.com/
Questions? Try the MongoDB Developer Community Forums
        https://community.mongodb.com
---
The server generated these startup warnings when booting:
        2021-03-20T18:41:36.246+00:00: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
        2021-03-20T18:41:37.134+00:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
        2021-03-20T18:41:37.134+00:00: /sys/kernel/mm/transparent_hugepage/enabled is 'always'. We suggest setting it to 'never'
---
---
        Enable MongoDB's free cloud-based monitoring service, which will then receive and display
        metrics about your deployment (disk utilization, CPU, operation statistics, etc).

        The monitoring data will be available on a MongoDB website with a unique URL accessible to you
        and anyone you share the URL with. MongoDB may use this information to make product
        improvements and to suggest MongoDB products and deployment options to you.

        To enable free monitoring, run the following command: db.enableFreeMonitoring()
        To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> use prueba
switched to db prueba
> db.items.save({ nombre: "Fideos", categoria: "Harina", stock: "20" })
WriteResult({ "nInserted" : 1 })
> db.items.save({ nombre: "Leche", categoria: "Lacteos", stock: "30" })
WriteResult({ "nInserted" : 1 })
> db.items.save({ nombre: "Crema", categoria: "Lacteos", stock: "15" })
WriteResult({ "nInserted" : 1 })
> db.items.find()
{ "_id" : ObjectId("60564212d9a685beae4fcbe1"), "nombre" : "Fideos", "categoria" : "Harina", "stock" : "20" }
{ "_id" : ObjectId("6056421ad9a685beae4fcbe2"), "nombre" : "Leche", "categoria" : "Lacteos", "stock" : "30" }
{ "_id" : ObjectId("60564223d9a685beae4fcbe3"), "nombre" : "Crema", "categoria" : "Lacteos", "stock" : "15" }
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
prueba  0.000GB
> show collections
items
> db.items.find()
{ "_id" : ObjectId("60564212d9a685beae4fcbe1"), "nombre" : "Fideos", "categoria" : "Harina", "stock" : "20" }
{ "_id" : ObjectId("6056421ad9a685beae4fcbe2"), "nombre" : "Leche", "categoria" : "Lacteos", "stock" : "30" }
{ "_id" : ObjectId("60564223d9a685beae4fcbe3"), "nombre" : "Crema", "categoria" : "Lacteos", "stock" : "15" }
>